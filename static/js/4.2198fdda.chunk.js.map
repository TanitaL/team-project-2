{"version":3,"file":"static/js/4.2198fdda.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Buttons/PawPrintBtn/PawPrintBtn.module.css?d994","components/Buttons/PawPrintBtn/PawPrintBtn.jsx","webpack://react-homework-template/./src/components/Container/BgContainer/BgContainer.module.css?3e68","components/Container/BgContainer/BgContainer.jsx","components/Container/Container/Container.jsx","pages/AuthNavPages/LoginPage.jsx","webpack://react-homework-template/./src/pages/AuthNavPages/AuthNavPage.module.css?4253","components/Formik/TextField.jsx","components/Formik/PasswordField.jsx","webpack://react-homework-template/./src/components/Modals/ModalRegister/ModalRegister.module.css?77a5","components/Modals/ModalRegister/ModalRegister.jsx","service/ValidateInForm/ValidateInForm.jsx","webpack://react-homework-template/./src/components/Container/Container/Container.module.css?69e0"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"PawPrintBtn_btn__h7AhH\"};","import React from 'react';\nimport css from './PawPrintBtn.module.css';\n\nconst PawPrintBtn = ({ title, type, handleSuccess }) => {\n  return (\n    <button onClick={handleSuccess ?? null} type={type} className={css.btn}>\n      {title}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        fill=\"none\"\n      >\n        <g fill=\"#FEF9F9\" clipPath=\"url(#a)\">\n          <path d=\"M15.361 14.361a5.82 5.82 0 0 0-3.322-4.518 5.82 5.82 0 0 0-5.596.36l-4.074 2.58a3.674 3.674 0 0 0-1.473 1.795 3.674 3.674 0 0 0-.113 2.32 3.674 3.674 0 0 0 1.294 1.93c.631.49 1.388.76 2.189.777l.052.001a7.271 7.271 0 0 1 5.24 2.467 3.678 3.678 0 0 0 2.002 1.177 3.674 3.674 0 0 0 2.31-.25 3.675 3.675 0 0 0 1.705-1.577c.388-.7.536-1.49.43-2.283l-.644-4.779Zm-2.074 7.359c-.927.422-2 .19-2.672-.575a8.66 8.66 0 0 0-2.85-2.135 8.662 8.662 0 0 0-3.467-.811h-.035A2.28 2.28 0 0 1 2.14 16.52a2.28 2.28 0 0 1 .982-2.55l4.075-2.58a4.418 4.418 0 0 1 4.249-.273 4.419 4.419 0 0 1 2.522 3.43l.643 4.78a2.28 2.28 0 0 1-1.323 2.392ZM4.721 9.395c.828.058 1.624-.26 2.244-.892.59-.603.948-1.426 1.01-2.318.06-.892-.182-1.757-.682-2.435-.527-.712-1.272-1.135-2.099-1.192-1.662-.115-3.12 1.325-3.252 3.21-.103 1.503.668 2.84 1.825 3.38.296.138.617.224.954.247Zm-1.375-3.53c.077-1.11.863-1.965 1.752-1.903.16.01.316.052.463.12.227.106.432.277.6.505.303.409.448.942.41 1.501-.039.56-.256 1.067-.612 1.43-.326.334-.731.502-1.14.474-.889-.061-1.55-1.015-1.473-2.126ZM10.641 8.647c1.762.821 3.957-.143 4.893-2.15.936-2.008.264-4.31-1.498-5.131-1.761-.822-3.956.143-4.892 2.15-.936 2.008-.264 4.31 1.497 5.13Zm2.801-6.006c1.059.493 1.425 1.956.817 3.261-.608 1.304-1.965 1.963-3.023 1.47-1.059-.494-1.425-1.957-.817-3.26.608-1.305 1.964-1.965 3.023-1.471ZM15.744 12.114c.229.216.485.388.76.516 1.285.6 2.974.248 4.122-.966.66-.7 1.05-1.582 1.097-2.487.05-.946-.278-1.803-.923-2.412-.644-.609-1.518-.888-2.46-.786-.901.098-1.76.537-2.421 1.236-1.394 1.475-1.472 3.672-.175 4.899ZM16.94 8.18c.432-.456.982-.741 1.55-.803.526-.057 1.003.088 1.343.41.34.32.512.788.484 1.316-.03.571-.283 1.137-.715 1.593-.86.911-2.159 1.088-2.893.394-.733-.693-.63-1.999.231-2.91ZM22.67 14.827c-.797-1.465-2.795-1.923-4.456-1.022-1.66.902-2.363 2.827-1.569 4.29.29.535.74.935 1.274 1.185.933.435 2.125.411 3.181-.162 1.66-.902 2.364-2.827 1.57-4.291Zm-2.24 3.055c-.98.531-2.124.326-2.548-.457-.425-.783.026-1.852 1.004-2.384.65-.353 1.372-.38 1.909-.13.271.126.496.324.639.587.424.783-.027 1.852-1.005 2.384Z\" />\n        </g>\n        <defs>\n          <clipPath id=\"a\">\n            <path fill=\"#fff\" d=\"M0 0h24v24H0z\" />\n          </clipPath>\n        </defs>\n      </svg>\n    </button>\n  );\n};\n\nexport default PawPrintBtn;\n","// extracted by mini-css-extract-plugin\nexport default {\"bgContainer\":\"BgContainer_bgContainer__Am6QV\"};","import React from 'react';\r\nimport css from './BgContainer.module.css';\r\n\r\nconst BgContainer = ({ children }) => {\r\n  return (\r\n    <>\r\n      <div className={css.bgContainer}>{children}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BgContainer;\r\n","import React from 'react';\r\nimport css from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={css.containerMain}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport {\r\n  css,\r\n  Formik,\r\n  Form,\r\n  TextField,\r\n  PasswordField,\r\n  austOperationThunk,\r\n  useSelector,\r\n  errorSelector,\r\n  loadingSelector,\r\n  BgContainer,\r\n  Container,\r\n  LoaderPet,\r\n  validateInLoginForm,\r\n  notify,\r\n} from './index';\r\n\r\nconst LoginPage = () => {\r\n  const error = useSelector(errorSelector);\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(loadingSelector);\r\n\r\n  useEffect(() => {\r\n    if (!error) {\r\n      return;\r\n    }\r\n\r\n    notify.error(error.data.message);\r\n  }, [error]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoaderPet />}\r\n      <BgContainer>\r\n        <Container>\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: '',\r\n            }}\r\n            validationSchema={validateInLoginForm}\r\n            onSubmit={(values, actions) => {\r\n              const { email, password } = values;\r\n              dispatch(\r\n                austOperationThunk({\r\n                  endpoint: 'login',\r\n                  userInfo: {\r\n                    email,\r\n                    password,\r\n                  },\r\n                  actions,\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            {formik => (\r\n              <div className={css.ContainerForm}>\r\n                <h2 className={css.ContainerForm__Title}>Login</h2>\r\n                <Form className={css.Form} onSubmit={formik.handleSubmit}>\r\n                  <TextField\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    type=\"text\"\r\n                  />\r\n                  <PasswordField\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    id=\"imgPasswordInput\"\r\n                    type=\"password\"\r\n                  />\r\n                  <button\r\n                    className={css.FormRegister__Button_Login}\r\n                    type=\"submit\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                  <p className={css.FormRegister__Text}>\r\n                    Don't have an account?\r\n                    <NavLink\r\n                      to={`/register`}\r\n                      className={css.FormRegister__Link}\r\n                    >\r\n                      Register\r\n                    </NavLink>\r\n                  </p>\r\n                </Form>\r\n              </div>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </BgContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ContainerForm\":\"AuthNavPage_ContainerForm__Okro9\",\"Form\":\"AuthNavPage_Form__vM3ft\",\"ContainerForm__Title\":\"AuthNavPage_ContainerForm__Title__KBZav\",\"ContainerForm__Imput\":\"AuthNavPage_ContainerForm__Imput__UW0mm\",\"ContainerForm__Imput_Password\":\"AuthNavPage_ContainerForm__Imput_Password__ar20p\",\"ImputContainer\":\"AuthNavPage_ImputContainer__-Hhp+\",\"FormRegister__Button\":\"AuthNavPage_FormRegister__Button__YSlyj\",\"FormRegister__Button_Login\":\"AuthNavPage_FormRegister__Button_Login__sGjNI\",\"FormRegister__Text\":\"AuthNavPage_FormRegister__Text__UZFX2\",\"FormRegister__Link\":\"AuthNavPage_FormRegister__Link__54OWc\",\"Button__EyeClosedIcon\":\"AuthNavPage_Button__EyeClosedIcon__W4FR-\",\"ErrorText\":\"AuthNavPage_ErrorText__3cj2i\",\"ErrorTextPassword\":\"AuthNavPage_ErrorTextPassword__Aev1V\",\"ErrorTextInput\":\"AuthNavPage_ErrorTextInput__iBNlC\",\"ErrorPasswordInput\":\"AuthNavPage_ErrorPasswordInput__iY4g0\"};","import React from 'react';\nimport { ErrorMessage, useField } from 'formik';\nimport { css } from '../../pages/AuthNavPages/index';\nexport const TextField = ({ ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <label htmlFor={field.name} />\n      <input\n        className={\n          meta.touched && meta.error\n            ? css.ErrorTextInput\n            : css.ContainerForm__Imput\n        }\n        autoComplete=\"off\"\n        {...field}\n        {...props}\n      />\n      <ErrorMessage\n        component={'div'}\n        name={field.name}\n        className={css.ErrorText}\n      />\n    </>\n  );\n};\n\nexport default TextField;\n","import React from 'react';\nimport { ErrorMessage, useField } from 'formik';\nimport { css } from '../../pages/AuthNavPages/index';\nimport sprite from 'assets/svg/sprite-cards.svg';\n\nexport const PasswordField = ({ ...props }) => {\n  const [field, meta] = useField(props);\n  const inputPassword = document.querySelector('#imgPasswordInput');\n  const inputConfirmPassword = document.querySelector(\n    '#imgConfirmPasswordInput'\n  );\n\n  const handelChangeTypeInput = e => {\n    const id = e.target.id;\n    const inputValue = field.value;\n\n    if (id === 'imgPasswordInput' && inputValue !== '') {\n      if (inputPassword.type === 'password') {\n        inputPassword.type = 'text';\n      } else {\n        inputPassword.type = 'password';\n      }\n    }\n\n    if (id === 'imgConfirmPasswordInput' && inputValue !== '') {\n      if (inputConfirmPassword.type === 'password') {\n        inputConfirmPassword.type = 'text';\n      } else {\n        inputConfirmPassword.type = 'password';\n      }\n    }\n  };\n\n  const handelClearInputValue = e => {\n    const id = e.target.id;\n    switch (id) {\n      case 'imgPasswordInput':\n        inputPassword.value = '';\n        field.value = '';\n        break;\n      case 'imgConfirmPasswordInput':\n        inputConfirmPassword.value = '';\n        field.value = '';\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <label htmlFor={field.name} />\n      <div\n        name={field.name}\n        className={\n          meta.touched && meta.error\n            ? css.ErrorPasswordInput\n            : css.ImputContainer\n        }\n      >\n        <input\n          className={css.ContainerForm__Imput_Password}\n          autoComplete=\"off\"\n          {...field}\n          {...props}\n        />\n        <button\n          type=\"button\"\n          onClick={\n            meta.touched && meta.error\n              ? handelClearInputValue\n              : handelChangeTypeInput\n          }\n          className={css.Button__EyeClosedIcon}\n        >\n          {\n            <>\n              <svg id={props.id} width=\"24\" height=\"24\">\n                <use\n                  href={\n                    meta.touched && meta.error\n                      ? `${sprite}#icon-cross-small`\n                      : `${sprite}#icon-eye-closed`\n                  }\n                />\n              </svg>\n            </>\n          }\n        </button>\n      </div>\n\n      <ErrorMessage\n        component={'div'}\n        name={field.name}\n        className={css.ErrorTextPassword}\n      />\n    </>\n  );\n};\n\nexport default PasswordField;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"ModalRegister_modalOverlay__zONNJ\",\"modalContainer\":\"ModalRegister_modalContainer__mm7iQ\",\"modalTitle\":\"ModalRegister_modalTitle__htm3O\",\"modalContainerBtn\":\"ModalRegister_modalContainerBtn__cpX8C\",\"modalInfo\":\"ModalRegister_modalInfo__8YJlk\",\"modalCrossBtn\":\"ModalRegister_modalCrossBtn__ouIwG\",\"modalHeader\":\"ModalRegister_modalHeader__POxsz\",\"modalBody\":\"ModalRegister_modalBody__AY7W8\",\"modalText\":\"ModalRegister_modalText__KydaU\",\"modalCancelBtn\":\"ModalRegister_modalCancelBtn__Ogh7w\",\"modalYesBtn\":\"ModalRegister_modalYesBtn__7IEC5\",\"modalActions\":\"ModalRegister_modalActions__Fs4jE\"};","import React from 'react';\nimport css from './ModalRegister.module.css';\nimport PawPrintBtn from 'components/Buttons/PawPrintBtn/PawPrintBtn';\nimport { useNavigate } from 'react-router-dom';\nimport sprite from 'assets/svg/sprite-cards.svg';\nimport { closeModal } from 'redux/auth/slice';\nimport { useDispatch } from 'react-redux';\n\nconst ModalRegister = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleSuccess = () => {\n    navigate('/notices');\n    dispatch(closeModal());\n  };\n  return (\n    <div className={css.modalOverlay}>\n      <div className={css.modalContainer}>\n        <div className={css.modalHeader}>\n          <button\n            type=\"button\"\n            className={css.modalCrossBtn}\n            onClick={() => dispatch(closeModal())}\n          >\n            <svg width=\"24\" height=\"24\">\n              <use href={`${sprite}#icon-close`} />\n            </svg>\n          </button>\n        </div>\n        <div className={css.modalBody}>\n          <div className={css.modalText}>\n            <h2 className={css.modalTitle}>Congrats!</h2>\n            <p className={css.modalInfo}>\n              Your profile has been registered. Confirm email on your mail.\n            </p>\n            <div className={css.modalContainerBtn}>\n              <PawPrintBtn\n                handleSuccess={handleSuccess}\n                title={'Go to pets'}\n                type={'button'}\n              />\n            </div>\n          </div>\n          <div className={css.modalActions}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalRegister;\n","import * as Yup from 'yup';\n\nexport const validateInRegisterForm = Yup.object({\n  name: Yup.string()\n    .required('Name is required')\n    .min(2, 'Must be at least 2 characters')\n    .max(16, 'Must be 16 characters or less'),\n  email: Yup.string()\n    .required('Email is required')\n    .email('Invalid email address'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters')\n    .max(16, 'Password must be at most 16 characters')\n    .matches(\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,16}$/,\n      'The password must consist of numbers and capital letters'\n    ),\n  confirmPassword: Yup.string()\n    .required('Password is required')\n    .oneOf([Yup.ref(`password`), null], 'Password must match'),\n});\n\nexport const validateInLoginForm = Yup.object({\n  email: Yup.string()\n    .required('Email is required')\n    .email('Invalid email address'),\n  password: Yup.string().required('Password is required'),\n});\n\nexport const validateProfileForm = Yup.object({\n  avatar: Yup.mixed().test(\n    'fileSize',\n    'Photo must be up to 3MB',\n    value => value?.size <= 3000000 || true\n  ),\n  name: Yup.string()\n    .min(2, 'Must be at least 2 letters')\n    .max(16, 'Must be less than 16 letters')\n    .required('Name is required'),\n  email: Yup.string()\n    .matches(\n      /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n      'Invalid email address'\n    )\n    .required('Email is required'),\n  birthday: Yup.string()\n    .matches(/^\\d{2}-\\d{2}-\\d{4}$/, 'Invalid date')\n    .test(\n      'date',\n      \"Birthday couldn't be in the future\",\n      value =>\n        new Date() - new Date(value?.split('-').reverse().join('/')) >= 0 ||\n        true\n    ),\n  phone: Yup.string().matches(\n    /^\\+380\\d{9}$/,\n    'Phone number must be in theformat +380XXXXXXXXX'\n  ),\n  city: Yup.string()\n    .min(2, 'Must be at least 2 letters')\n    .matches(/^[a-zA-Z]+$/, 'Ivalid city'),\n});","// extracted by mini-css-extract-plugin\nexport default {\"containerMain\":\"Container_containerMain__yFMrH\"};"],"names":["title","type","handleSuccess","onClick","className","css","xmlns","width","height","fill","clipPath","d","id","children","error","useSelector","errorSelector","dispatch","useDispatch","isLoading","loadingSelector","useEffect","notify","data","message","initialValues","email","password","validationSchema","validateInLoginForm","onSubmit","values","actions","austOperationThunk","endpoint","userInfo","formik","handleSubmit","placeholder","name","to","props","useField","field","meta","htmlFor","touched","autoComplete","component","inputPassword","document","querySelector","inputConfirmPassword","e","target","value","inputValue","href","sprite","navigate","useNavigate","closeModal","PawPrintBtn","validateInRegisterForm","Yup","required","min","max","matches","confirmPassword","oneOf","validateProfileForm","avatar","test","size","birthday","Date","split","reverse","join","phone","city"],"sourceRoot":""}