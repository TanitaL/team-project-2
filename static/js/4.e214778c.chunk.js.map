{"version":3,"file":"static/js/4.e214778c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Container/BgContainer/BgContainer.module.css?3e68","components/Container/BgContainer/BgContainer.jsx","components/Container/Container/Container.jsx","pages/AuthNavPages/LoginPage.jsx","assets/svg/register-form-eye-closed.svg","assets/svg/register-form-cross-small.svg","pages/AuthNavPages/PasswordField.jsx","pages/AuthNavPages/TextField.jsx","webpack://react-homework-template/./src/components/Container/Container/Container.module.css?69e0","webpack://react-homework-template/./src/pages/AuthNavPages/AuthNavPage.module.css?4253"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"bgContainer\":\"BgContainer_bgContainer__Am6QV\"};","import React from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport css from './BgContainer.module.css';\r\n\r\nconst BgContainer = ({ children }) => {\r\n  return (\r\n    <>\r\n      <div className={css.bgContainer}>{children}</div>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BgContainer;\r\n","import React from 'react';\r\nimport css from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={css.containerMain}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React, { useEffect } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport css from './AuthNavPage.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport TextField from './TextField';\r\nimport PasswordField from './PasswordField';\r\nimport { useDispatch } from 'react-redux';\r\nimport { austOperationThunk } from 'redux/auth/thunks';\r\nimport { useSelector } from 'react-redux';\r\nimport { errorSelector, loadingSelector } from 'redux/auth/selectors';\r\nimport { toast } from 'react-toastify';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport BgContainer from 'components/Container/BgContainer/BgContainer';\r\nimport Container from 'components/Container/Container/Container';\r\nimport LoaderPet from 'components/LoaderPet/LoaderPet';\r\n\r\nconst LoginPage = () => {\r\n  const error = useSelector(errorSelector);\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(loadingSelector);\r\n  const validate = Yup.object({\r\n    email: Yup.string()\r\n      .required('Email is required')\r\n      .email('Invalid email address'),\r\n    password: Yup.string().required('Password is required'),\r\n  });\r\n  useEffect(() => {\r\n    if (!error) {\r\n      return;\r\n    }\r\n    const notify = () =>\r\n      toast.error(error.data.message ?? '', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'light',\r\n      });\r\n    notify();\r\n  }, [error]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoaderPet />}\r\n      <BgContainer>\r\n        <Container>\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: '',\r\n            }}\r\n            validationSchema={validate}\r\n            onSubmit={(values, actions) => {\r\n              const { email, password } = values;\r\n              dispatch(\r\n                austOperationThunk({\r\n                  endpoint: 'login',\r\n                  userInfo: {\r\n                    email,\r\n                    password,\r\n                  },\r\n                  actions,\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            {formik => (\r\n              <div className={css.ContainerForm}>\r\n                <h2 className={css.ContainerForm__Title}>Login</h2>\r\n                <Form className={css.Form} onSubmit={formik.handleSubmit}>\r\n                  <TextField\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    type=\"text\"\r\n                  />\r\n                  <PasswordField\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    id=\"imgPasswordInput\"\r\n                    type=\"password\"\r\n                  />\r\n                  <button\r\n                    className={css.FormRegister__Button_Login}\r\n                    type=\"submit\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                  <p className={css.FormRegister__Text}>\r\n                    Don't have an account?\r\n                    <NavLink\r\n                      to={`/register`}\r\n                      className={css.FormRegister__Link}\r\n                    >\r\n                      Register\r\n                    </NavLink>\r\n                  </p>\r\n                </Form>\r\n              </div>\r\n            )}\r\n          </Formik>\r\n          <ToastContainer />\r\n        </Container>\r\n      </BgContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRegisterFormEyeClosed(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"icon / eye-closed\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"shape\",\n    d: \"M9.76406 5.29519C10.4664 5.10724 11.2123 5 12 5C18.3636 5 22 12 22 12C22 12 21.171 13.5958 19.612 15.2635M4.34912 8.77822C2.8152 10.4307 2 12 2 12C2 12 5.63636 19 12 19C12.8021 19 13.5608 18.8888 14.2744 18.6944M11.5 14.9585C10.4158 14.7766 9.52883 14.0132 9.17071 13M12.5 9.04148C13.7563 9.25224 14.7478 10.2437 14.9585 11.5M3 3L21 21\",\n    stroke: \"#54ADFF\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRegisterFormEyeClosed);\nexport default __webpack_public_path__ + \"static/media/register-form-eye-closed.af29198960072a3c37adcea33b1d3fbe.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRegisterFormCrossSmall(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 5L5 19M5.00004 5L19 19\",\n    stroke: \"#F43F5E\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRegisterFormCrossSmall);\nexport default __webpack_public_path__ + \"static/media/register-form-cross-small.979527430babc874f1a86f2736f96771.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ErrorMessage, useField } from 'formik';\r\nimport css from './AuthNavPage.module.css';\r\nimport eyeClosedIcon from '../../assets/svg/register-form-eye-closed.svg';\r\nimport crossSmall from '../../assets/svg/register-form-cross-small.svg';\r\n\r\nexport const PasswordField = ({ ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const inputPassword = document.querySelector('#imgPasswordInput');\r\n  const inputConfirmPassword = document.querySelector(\r\n    '#imgConfirmPasswordInput'\r\n  );\r\n\r\n  const handelChangeTypeInput = e => {\r\n    const id = e.target.id;\r\n    const inputValue = field.value;\r\n\r\n    if (id === 'imgPasswordInput' && inputValue !== '') {\r\n      if (inputPassword.type === 'password') {\r\n        inputPassword.type = 'text';\r\n      } else {\r\n        inputPassword.type = 'password';\r\n      }\r\n    }\r\n\r\n    if (id === 'imgConfirmPasswordInput' && inputValue !== '') {\r\n      if (inputConfirmPassword.type === 'password') {\r\n        inputConfirmPassword.type = 'text';\r\n      } else {\r\n        inputConfirmPassword.type = 'password';\r\n      }\r\n    }\r\n  };\r\n\r\n  const handelClearInputValue = e => {\r\n    const id = e.target.id;\r\n    switch (id) {\r\n      case 'imgPasswordInput':\r\n        inputPassword.value = '';\r\n        field.value = '';\r\n        break;\r\n      case 'imgConfirmPasswordInput':\r\n        inputConfirmPassword.value = '';\r\n        field.value = '';\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={field.name} />\r\n      <div\r\n        name={field.name}\r\n        className={\r\n          meta.touched && meta.error\r\n            ? css.ErrorPasswordInput\r\n            : css.ImputContainer\r\n        }\r\n      >\r\n        <input\r\n          className={css.ContainerForm__Imput_Password}\r\n          autoComplete=\"off\"\r\n          {...field}\r\n          {...props}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={\r\n            meta.touched && meta.error\r\n              ? handelClearInputValue\r\n              : handelChangeTypeInput\r\n          }\r\n          className={css.Button__EyeClosedIcon}\r\n        >\r\n          {\r\n            <img\r\n              id={props.id}\r\n              src={meta.touched && meta.error ? crossSmall : eyeClosedIcon}\r\n              alt=\"eyeClosedIcon\"\r\n            />\r\n          }\r\n        </button>\r\n      </div>\r\n\r\n      <ErrorMessage\r\n        component={'div'}\r\n        name={field.name}\r\n        className={css.ErrorTextPassword}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordField;\r\n","import React from 'react';\r\nimport { ErrorMessage, useField } from 'formik';\r\nimport css from './AuthNavPage.module.css';\r\nexport const TextField = ({ ...props }) => {\r\n  const [field, meta] = useField(props);\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={field.name} />\r\n      <input\r\n        className={\r\n          meta.touched && meta.error\r\n            ? css.ErrorTextInput\r\n            : css.ContainerForm__Imput\r\n        }\r\n        autoComplete=\"off\"\r\n        {...field}\r\n        {...props}\r\n      />\r\n      <ErrorMessage\r\n        component={'div'}\r\n        name={field.name}\r\n        className={css.ErrorText}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextField;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"containerMain\":\"Container_containerMain__yFMrH\"};","// extracted by mini-css-extract-plugin\nexport default {\"ContainerForm\":\"AuthNavPage_ContainerForm__Okro9\",\"Form\":\"AuthNavPage_Form__vM3ft\",\"ContainerForm__Title\":\"AuthNavPage_ContainerForm__Title__KBZav\",\"ContainerForm__Imput\":\"AuthNavPage_ContainerForm__Imput__UW0mm\",\"ContainerForm__Imput_Password\":\"AuthNavPage_ContainerForm__Imput_Password__ar20p\",\"ImputContainer\":\"AuthNavPage_ImputContainer__-Hhp+\",\"FormRegister__Button\":\"AuthNavPage_FormRegister__Button__YSlyj\",\"FormRegister__Button_Login\":\"AuthNavPage_FormRegister__Button_Login__sGjNI\",\"FormRegister__Text\":\"AuthNavPage_FormRegister__Text__UZFX2\",\"FormRegister__Link\":\"AuthNavPage_FormRegister__Link__54OWc\",\"Button__EyeClosedIcon\":\"AuthNavPage_Button__EyeClosedIcon__W4FR-\",\"ErrorText\":\"AuthNavPage_ErrorText__3cj2i\",\"ErrorTextPassword\":\"AuthNavPage_ErrorTextPassword__Aev1V\",\"ErrorTextInput\":\"AuthNavPage_ErrorTextInput__iBNlC\",\"ErrorPasswordInput\":\"AuthNavPage_ErrorPasswordInput__iY4g0\"};"],"names":["children","className","css","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","error","useSelector","errorSelector","dispatch","useDispatch","isLoading","loadingSelector","validate","Yup","email","required","password","useEffect","toast","data","message","progress","undefined","notify","initialValues","validationSchema","onSubmit","values","actions","austOperationThunk","endpoint","userInfo","formik","handleSubmit","placeholder","name","id","type","to","props","useField","field","meta","inputPassword","document","querySelector","inputConfirmPassword","htmlFor","touched","autoComplete","onClick","e","target","value","inputValue","src","crossSmall","eyeClosedIcon","alt","component"],"sourceRoot":""}