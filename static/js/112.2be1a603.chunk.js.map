{"version":3,"file":"static/js/112.2be1a603.chunk.js","mappings":"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","sources":["assets/svg/register-form-eye-closed.svg","assets/svg/register-form-cross-small.svg","pages/AuthNavPages/PasswordField.jsx","pages/AuthNavPages/RegisterPage.jsx","pages/AuthNavPages/TextField.jsx","webpack://react-homework-template/./src/pages/AuthNavPages/AuthNavPage.module.css?4253"],"sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRegisterFormEyeClosed(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"icon / eye-closed\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"shape\",\n    d: \"M9.76406 5.29519C10.4664 5.10724 11.2123 5 12 5C18.3636 5 22 12 22 12C22 12 21.171 13.5958 19.612 15.2635M4.34912 8.77822C2.8152 10.4307 2 12 2 12C2 12 5.63636 19 12 19C12.8021 19 13.5608 18.8888 14.2744 18.6944M11.5 14.9585C10.4158 14.7766 9.52883 14.0132 9.17071 13M12.5 9.04148C13.7563 9.25224 14.7478 10.2437 14.9585 11.5M3 3L21 21\",\n    stroke: \"#54ADFF\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRegisterFormEyeClosed);\nexport default __webpack_public_path__ + \"static/media/register-form-eye-closed.af29198960072a3c37adcea33b1d3fbe.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRegisterFormCrossSmall(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 5L5 19M5.00004 5L19 19\",\n    stroke: \"#F43F5E\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRegisterFormCrossSmall);\nexport default __webpack_public_path__ + \"static/media/register-form-cross-small.979527430babc874f1a86f2736f96771.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ErrorMessage, useField } from 'formik';\r\nimport css from './AuthNavPage.module.css';\r\nimport eyeClosedIcon from '../../assets/svg/register-form-eye-closed.svg';\r\nimport crossSmall from '../../assets/svg/register-form-cross-small.svg';\r\n\r\nexport const PasswordField = ({ ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const inputPassword = document.querySelector('#imgPasswordInput');\r\n  const inputConfirmPassword = document.querySelector(\r\n    '#imgConfirmPasswordInput'\r\n  );\r\n\r\n  const handelChangeTypeInput = e => {\r\n    const id = e.target.id;\r\n    const inputValue = field.value;\r\n\r\n    if (id === 'imgPasswordInput' && inputValue !== '') {\r\n      if (inputPassword.type === 'password') {\r\n        inputPassword.type = 'text';\r\n      } else {\r\n        inputPassword.type = 'password';\r\n      }\r\n    }\r\n\r\n    if (id === 'imgConfirmPasswordInput' && inputValue !== '') {\r\n      if (inputConfirmPassword.type === 'password') {\r\n        inputConfirmPassword.type = 'text';\r\n      } else {\r\n        inputConfirmPassword.type = 'password';\r\n      }\r\n    }\r\n  };\r\n\r\n  const handelClearInputValue = e => {\r\n    const id = e.target.id;\r\n    switch (id) {\r\n      case 'imgPasswordInput':\r\n        inputPassword.value = '';\r\n        field.value = '';\r\n        break;\r\n      case 'imgConfirmPasswordInput':\r\n        inputConfirmPassword.value = '';\r\n        field.value = '';\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={field.name} />\r\n      <div\r\n        name={field.name}\r\n        className={\r\n          meta.touched && meta.error\r\n            ? css.ErrorPasswordInput\r\n            : css.ImputContainer\r\n        }\r\n      >\r\n        <input\r\n          className={css.ContainerForm__Imput_Password}\r\n          autoComplete=\"off\"\r\n          {...field}\r\n          {...props}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={\r\n            meta.touched && meta.error\r\n              ? handelClearInputValue\r\n              : handelChangeTypeInput\r\n          }\r\n          className={css.Button__EyeClosedIcon}\r\n        >\r\n          {\r\n            <img\r\n              id={props.id}\r\n              src={meta.touched && meta.error ? crossSmall : eyeClosedIcon}\r\n              alt=\"eyeClosedIcon\"\r\n            />\r\n          }\r\n        </button>\r\n      </div>\r\n\r\n      <ErrorMessage\r\n        component={'div'}\r\n        name={field.name}\r\n        className={css.ErrorText}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordField;\r\n","import React, { useEffect } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport css from './AuthNavPage.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport TextField from './TextField';\r\nimport PasswordField from './PasswordField';\r\nimport { useDispatch } from 'react-redux';\r\nimport { austOperationThunk } from 'redux/auth/thunks';\r\nimport { useSelector } from 'react-redux';\r\nimport { errorSelector } from 'redux/auth/selectors';\r\nimport { toast } from 'react-toastify';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst RegisterPage = () => {\r\n  const error = useSelector(errorSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const validate = Yup.object({\r\n    name: Yup.string()\r\n      .required('Name is required')\r\n      .min(2, 'Must be at least 2 characters')\r\n      .max(16, 'Must be 16 characters or less'),\r\n    email: Yup.string()\r\n      .required('Email is required')\r\n      .email('Invalid email address'),\r\n    password: Yup.string()\r\n      .required('Password is required')\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .max(16, 'Password must be at most 16 characters')\r\n      .matches(\r\n        /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,16}$/,\r\n        'The password must consist of numbers and capital letters'\r\n      ),\r\n    confirmPassword: Yup.string()\r\n      .required('Password is required')\r\n      .oneOf([Yup.ref(`password`), null], 'Password must match'),\r\n  });\r\n  useEffect(() => {\r\n    if (!error) {\r\n      return;\r\n    }\r\n\r\n    const notify = () =>\r\n      toast.error(error.data.message ?? '', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'light',\r\n      });\r\n    notify();\r\n  }, [error]);\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: '',\r\n        }}\r\n        validationSchema={validate}\r\n        onSubmit={(values, actions) => {\r\n          const { name, email, password } = values;\r\n          dispatch(\r\n            austOperationThunk({\r\n              endpoint: 'register',\r\n              userInfo: {\r\n                name,\r\n                email,\r\n                password,\r\n              },\r\n            })\r\n          );\r\n          if (!error) {\r\n            return async () => {\r\n              actions.resetForm();\r\n            };\r\n          }\r\n        }}\r\n      >\r\n        {formik => (\r\n          <div className={css.Container}>\r\n            <div className={css.ContainerForm}>\r\n              <h2 className={css.ContainerForm__Title}>Registration</h2>\r\n              <Form className={css.Form} onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                  placeholder=\"Name\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                />\r\n                <TextField\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                />\r\n                <PasswordField\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  id=\"imgPasswordInput\"\r\n                  type=\"password\"\r\n                />\r\n                <PasswordField\r\n                  placeholder=\"Confirm Password\"\r\n                  name=\"confirmPassword\"\r\n                  id=\"imgConfirmPasswordInput\"\r\n                  type=\"password\"\r\n                />\r\n                <button className={css.FormRegister__Button} type=\"submit\">\r\n                  Registration\r\n                </button>\r\n\r\n                <p className={css.FormRegister__Text}>\r\n                  Already have an account?{' '}\r\n                  <NavLink to={`/login`} className={css.FormRegister__Link}>\r\n                    Login\r\n                  </NavLink>\r\n                </p>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { ErrorMessage, useField } from 'formik';\r\nimport css from './AuthNavPage.module.css';\r\nexport const TextField = ({ ...props }) => {\r\n  const [field, meta] = useField(props);\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={field.name} />\r\n      <input\r\n        className={\r\n          meta.touched && meta.error\r\n            ? css.ErrorTextInput\r\n            : css.ContainerForm__Imput\r\n        }\r\n        autoComplete=\"off\"\r\n        {...field}\r\n        {...props}\r\n      />\r\n      <ErrorMessage\r\n        component={'div'}\r\n        name={field.name}\r\n        className={css.ErrorText}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextField;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"AuthNavPage_Container__uvI5k\",\"ContainerForm\":\"AuthNavPage_ContainerForm__Okro9\",\"Form\":\"AuthNavPage_Form__vM3ft\",\"ContainerForm__Title\":\"AuthNavPage_ContainerForm__Title__KBZav\",\"ContainerForm__Imput\":\"AuthNavPage_ContainerForm__Imput__UW0mm\",\"ContainerForm__Imput_Password\":\"AuthNavPage_ContainerForm__Imput_Password__ar20p\",\"ImputContainer\":\"AuthNavPage_ImputContainer__-Hhp+\",\"FormRegister__Button\":\"AuthNavPage_FormRegister__Button__YSlyj\",\"FormRegister__Button_Login\":\"AuthNavPage_FormRegister__Button_Login__sGjNI\",\"FormRegister__Text\":\"AuthNavPage_FormRegister__Text__UZFX2\",\"FormRegister__Link\":\"AuthNavPage_FormRegister__Link__54OWc\",\"Button__EyeClosedIcon\":\"AuthNavPage_Button__EyeClosedIcon__W4FR-\",\"ErrorText\":\"AuthNavPage_ErrorText__3cj2i\",\"ErrorTextInput\":\"AuthNavPage_ErrorTextInput__iBNlC\",\"ErrorPasswordInput\":\"AuthNavPage_ErrorPasswordInput__iY4g0\"};"],"names":["props","useField","field","meta","inputPassword","document","querySelector","inputConfirmPassword","htmlFor","name","className","touched","error","css","autoComplete","type","onClick","e","target","id","value","inputValue","src","crossSmall","eyeClosedIcon","alt","component","useSelector","errorSelector","dispatch","useDispatch","validate","Yup","required","min","max","email","password","matches","confirmPassword","oneOf","useEffect","toast","data","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","notify","initialValues","validationSchema","onSubmit","values","actions","austOperationThunk","endpoint","userInfo","resetForm","formik","handleSubmit","placeholder","to"],"sourceRoot":""}